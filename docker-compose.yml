# volumes:
#   coffee_tavern-data:
#     external: true
  # tagsapi-data:
  #   external: true
services:
  accountsapi:
    build:
      context: ./accountsapi
      dockerfile: Dockerfile.dev
    environment:
      # DATABASE_URL: postgresql://coffee:tavern@db/coffee_tavern
      # URL for updated Accounts api 2 on elephant sql
      DATABASE_URL: postgres://snbufshr:KLJy0dWrnX5vhJfOIYAONvCgM1PbytS7@lallah.db.elephantsql.com/snbufshr
      # WAIT_HOSTS: db:5432
      PORT: 8000
      SIGNING_KEY: aki
    ports:
      - "8000:8000"
    volumes:
      - ./accountsapi:/app

  tagsapi:
      build:
        context: ./tagsapi
        dockerfile: Dockerfile.dev
      ports:
        - "8100:8100"
      volumes:
        - ./tagsapi:/app
      environment:
        DATABASE_URL: postgres://tjekoxde:qNH_ZgvbJmON36vw0InZM-m2ptGxsy-F@lallah.db.elephantsql.com/tjekoxde
        # WAIT_HOSTS: db:5432
        PORT: 8100
        SIGNING_KEY: aki

  react:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi/coffee-tavern:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: http://localhost:8000
      REACT_APP_TAGS_API_HOST: http://localhost:8100

# comment this before deployment
  # db:
  #   image: postgres:14.5-bullseye
  #   environment:
  #     POSTGRES_PASSWORD: tavern
  #     POSTGRES_USER: coffee
  #     POSTGRES_DB: coffee_tavern
  #   ports:
  #     - "15432:5432"
  #   volumes:
  #     - coffee_tavern-data:/var/lib/postgresql/data
